[{"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\index.js":"1","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\App.js":"2","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\router.js":"3","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\services\\security.js":"4","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Home\\index.js":"5","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Login\\index.js":"6","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Register\\index.js":"7","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\services\\api.js":"8","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\index.js":"9","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\index.js":"10","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\index.js":"11","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\index.js":"12","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\index.js":"13","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Tag\\index.js":"14","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Tag\\style.js":"15","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\styles.js":"16","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Home\\styles.js":"17","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Login\\styles.js":"18","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Register\\styles.js":"19","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\GlobalStyles.js":"20","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\styles.js":"21","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\styles.js":"22","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\styles.js":"23","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\styles.js":"24","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\utils.js":"25","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\style.js":"26","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\style.js":"27","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\style.js":"28","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\style.js":"29","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\style.js":"30"},{"size":197,"mtime":1613148154485,"results":"31","hashOfConfig":"32"},{"size":190,"mtime":1613156640968,"results":"33","hashOfConfig":"32"},{"size":941,"mtime":1613148154502,"results":"34","hashOfConfig":"32"},{"size":1160,"mtime":1613148154986,"results":"35","hashOfConfig":"32"},{"size":11653,"mtime":1613153223134,"results":"36","hashOfConfig":"32"},{"size":2421,"mtime":1613148587625,"results":"37","hashOfConfig":"32"},{"size":3140,"mtime":1613148610721,"results":"38","hashOfConfig":"32"},{"size":126,"mtime":1613148154963,"results":"39","hashOfConfig":"32"},{"size":742,"mtime":1613156826944,"results":"40","hashOfConfig":"32"},{"size":258,"mtime":1613148154673,"results":"41","hashOfConfig":"32"},{"size":317,"mtime":1613148154708,"results":"42","hashOfConfig":"32"},{"size":322,"mtime":1613148154739,"results":"43","hashOfConfig":"32"},{"size":413,"mtime":1613148154773,"results":"44","hashOfConfig":"32"},{"size":209,"mtime":1613148154804,"results":"45","hashOfConfig":"32"},{"size":443,"mtime":1613148154820,"results":"46","hashOfConfig":"32"},{"size":257,"mtime":1612551095775,"results":"47","hashOfConfig":"32"},{"size":3868,"mtime":1613150396095,"results":"48","hashOfConfig":"32"},{"size":1744,"mtime":1613150980602,"results":"49","hashOfConfig":"32"},{"size":1744,"mtime":1613156639743,"results":"50","hashOfConfig":"32"},{"size":1517,"mtime":1612975684438,"results":"51","hashOfConfig":"32"},{"size":688,"mtime":1612975958599,"results":"52","hashOfConfig":"32"},{"size":822,"mtime":1611945483899,"results":"53","hashOfConfig":"32"},{"size":555,"mtime":1612975334510,"results":"54","hashOfConfig":"32"},{"size":1168,"mtime":1612975351499,"results":"55","hashOfConfig":"32"},{"size":518,"mtime":1613148151362,"results":"56","hashOfConfig":"32"},{"size":555,"mtime":1613148154690,"results":"57","hashOfConfig":"32"},{"size":646,"mtime":1613148154655,"results":"58","hashOfConfig":"32"},{"size":745,"mtime":1613148154724,"results":"59","hashOfConfig":"32"},{"size":1097,"mtime":1613148154754,"results":"60","hashOfConfig":"32"},{"size":237,"mtime":1613148154788,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vjan8b",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\App.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\router.js",[],["124","125"],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\services\\security.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Home\\index.js",["126","127"],"import { useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactEmbedGist from \"react-embed-gist\";\nimport {\n  Container,\n  Header,\n  Content,\n  ProfileContainer,\n  FeedContainer,\n  ActionsContainer,\n  QuestionCard,\n  Logo,\n  IconSignOut,\n  GistIcon,\n  ContainerGist,\n} from \"./styles\";\n\nimport Input from \"../../components/Input\";\nimport { format } from \"date-fns\";\nimport imgProfile from \"../../assets/foto_perfil.png\";\nimport logo from \"../../assets/logo.png\";\nimport { api } from \"../../services/api\";\nimport { getUser, signOut, setUser } from \"../../services/security\";\nimport Modal from \"../../components/Modal\";\nimport { FormNewQuestion } from \"../../components/Modal/style\";\nimport Select from \"../../components/Select\";\nimport Tag from \"../../components/Tag\";\nimport Loading from \"../../components/Loading\";\nimport { validSquaredImage } from \"../../utils\";\n\nfunction NewQuestion({ handleReload, handleLoading }) {\n  const [newQuestion, setNewQuestion] = useState({\n    title: \"\",\n    description: \"\",\n    gist: \"\",\n  });\n\n  const [categories, setCategories] = useState([]);\n\n  const [categoriesSel, setCategoriesSel] = useState([]);\n\n  const [image, setImage] = useState(null);\n\n  const imageRef = useRef();\n  const categoriesRef = useRef();\n\n  useEffect(() => {\n    const loadCategories = async () => {\n      try {\n        const response = await api.get(\"/categories\");\n        setCategories(response.data);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    loadCategories();\n  }, []);\n\n  const handleImage = (e) => {\n    if (e.target.files[0]) {\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\n      imageRef.current.style.display = \"flex\";\n    } else {\n      imageRef.current.src = \"\";\n      imageRef.current.style.display = \"none\";\n    }\n\n    setImage(e.target.files[0]);\n  };\n\n  const handleCategories = (e) => {\n    const idSel = e.target.value;\n\n    const categorySel = categories.find((c) => c.id.toString() === idSel);\n\n    if (categorySel && !categoriesSel.includes(categorySel)) {\n      setCategoriesSel([...categoriesSel, categorySel]);\n    }\n\n    e.target[e.target.selectedIndex].disable = true;\n    e.target.value = \"\";\n  };\n  const handleUnselCategory = (idUnsel) => {\n    setCategoriesSel(categoriesSel.filter((c) => c.id !== idUnsel));\n\n    const { options } = categoriesRef.current;\n\n    for (var i = 0; i < options.length; i++) {\n      if (options[i].value === idUnsel.toString()) options[i].disable = false;\n    }\n  };\n  const handlerInput = (e) => {\n    setNewQuestion({ ...newQuestion, [e.target.id]: e.target.value });\n  };\n\n  const handleAddNewQuestion = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n\n    data.append(\"title\", newQuestion.title);\n    data.append(\"description\", newQuestion.description);\n\n    const categories = categoriesSel.reduce((s, c) => (s += c.id + \",\"), \"\");\n\n    data.append(\"categories\", categories.substr(0, categories.length - 1));\n\n    if (image) data.append(\"image\", image);\n    if (newQuestion.gist) data.append(\"gist\", newQuestion.gist);\n\n    try {\n      handleLoading(true);\n\n      await api.post(\"/questions\", data, {\n        headers: {\n          \"Content-type\": \"multipart/from-data\",\n        },\n      });\n\n      handleReload();\n    } catch (error) {\n      handleLoading(false);\n\n      alert(error);\n    }\n  };\n\n  return (\n    <>\n      <FormNewQuestion onSubmit={handleAddNewQuestion}>\n        <Input\n          id=\"title\"\n          label=\"Título\"\n          value={newQuestion.title}\n          handler={handlerInput}\n        />\n        <Input\n          id=\"description\"\n          label=\"Descrição\"\n          value={newQuestion.description}\n          handler={handlerInput}\n        />\n        <Input\n          id=\"gist\"\n          label=\"Gist\"\n          value={newQuestion.gist}\n          handler={handlerInput}\n        />\n        <Select\n          id=\"categories\"\n          label=\"Categorias\"\n          handler={handleCategories}\n          ref={categoriesRef}\n        >\n          <option value=\"\" selected disabled>\n            Selecione\n          </option>\n          {categories.map((c) => (\n            <option key={c.id} value={c.id}>\n              {c.description}\n            </option>\n          ))}\n        </Select>\n        <div>\n          {categoriesSel.map((c) => (\n            <Tag\n              key={c.id}\n              info={c.description}\n              handleClose={() => handleUnselCategory(c.id)}\n            ></Tag>\n          ))}\n        </div>\n        <input type=\"file\" onChange={handleImage} />\n        <img alt=\"Pré-visualização\" ref={imageRef} />\n        <button>Enviar</button>\n      </FormNewQuestion>\n    </>\n  );\n}\n\nfunction Profile({ setShowLoading, handleReload, setMessage }) {\n  const [student, setStudent] = useState(\"\");\n\n  useEffect(() => {\n    setStudent(getUser());\n  }, []);\n\n  const handleImage = async (e) => {\n    if (!e.target.files[0]) return;\n\n    try {\n      await validSquaredImage(e.target.files[0]);\n\n      const data = new FormData();\n\n      data.append(\"image\", e.target.files[0]);\n      setShowLoading(true);\n\n      const response = await api.post(`/students/${student.id}/images`, data);\n\n      setTimeout(() => {\n        setStudent({ ...student, image: response.data.image });\n        handleReload();\n      }, 1000);\n\n      setUser({ ...student, image: response.data.image });\n    } catch (error) {\n      alert(error);\n      setShowLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <img src={student.image || imgProfile} alt=\"Imagem de Perfil\" />\n        <label htmlFor=\"editImageProfile\">Editar Foto</label>\n        <input id=\"editImageProfile\" type=\"file\" onChange={handleImage} />\n      </section>\n      <section>\n        <strong>NOME:</strong>\n        <p>{student.name}</p>\n      </section>\n      <section>\n        <strong>RA:</strong>\n        <p>{student.ra}</p>\n      </section>\n      <section>\n        <strong>E-MAIL:</strong>\n        <p>{student.email}</p>\n      </section>\n    </>\n  );\n}\n\nfunction Answer({ answer }) {\n  const student = getUser();\n\n  return (\n    <section>\n      <header>\n        <img src={answer.Student.image || imgProfile} alt=\"imagem perfil\" />\n        <strong>\n          por{\" \"}\n          {student.studentId === answer.Student.id\n            ? \" Você\"\n            : answer.Student.name}\n        </strong>\n        <p> {format(new Date(answer.created_at), \"dd/MM/yyyy 'as' HH:mm\")}</p>\n      </header>\n      <p>{answer.description}</p>\n    </section>\n  );\n}\n\nfunction Question({ question, handleLoading, setCurrentGist }) {\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  const [newAnswer, setNewAnswer] = useState(\"\");\n\n  const [answers, setAnswers] = useState(question.Answers);\n\n  const qtdAnswers = answers.length;\n\n  useEffect(() => {\n    setAnswers(question.Answers);\n  }, [question.Answers]);\n\n  const handleAddAnswer = async (e) => {\n    e.preventDefault();\n\n    if (newAnswer.length < 10) {\n      return alert(\"A resposta deve ter no mínimo 10 caracteres\");\n    }\n\n    try {\n      handleLoading(true);\n      const response = await api.post(`/questions/${question.id}/answers`, {\n        description: newAnswer,\n      });\n\n      const aluno = getUser();\n\n      const answerAdded = {\n        id: response.data.id,\n        description: newAnswer,\n        created_at: response.data.createdAt,\n        Student: {\n          id: aluno.studentId,\n          name: aluno.name,\n          image: aluno.image,\n        },\n      };\n\n      setAnswers([...answers, answerAdded]);\n\n      setNewAnswer(\"\");\n      handleLoading(false);\n    } catch (error) {\n      handleLoading(false);\n      alert(error);\n    }\n  };\n\n  const student = getUser();\n\n  return (\n    <QuestionCard>\n      <header>\n        <img src={question.Student.image || imgProfile} />\n        <strong>\n          por{\" \"}\n          {student.studentId === question.Student.id\n            ? \"Você\"\n            : question.Student.name}\n        </strong>\n        <p>\n          em {format(new Date(question.created_at), \"dd/MM/yyyy 'as' HH:mm\")}\n        </p>\n        {question.gist && (\n          <GistIcon onClick={() => setCurrentGist(question.gist)} />\n        )}\n      </header>\n      <section>\n        <strong>{question.title}</strong>\n        <p>{question.description}</p>\n        <img src={question.image} />\n      </section>\n      <footer>\n        <h1 onClick={() => setShowAnswers(!showAnswers)}>\n          {qtdAnswers === 0 ? (\n            \"Seja o primeiro a responder\"\n          ) : (\n            <>\n              {qtdAnswers}\n              {qtdAnswers > 1 ? \" Respostas\" : \" Resposta\"}\n            </>\n          )}\n        </h1>\n        {showAnswers && (\n          <>\n            {answers.map((answer) => (\n              <Answer answer={answer} />\n            ))}\n          </>\n        )}\n        <form onSubmit={handleAddAnswer}>\n          <textarea\n            minLength={10}\n            placeholder=\"Responda essa dúvida!\"\n            onChange={(e) => setNewAnswer(e.target.value)}\n            required\n            value={newAnswer}\n          ></textarea>\n          <button>Enviar</button>\n        </form>\n      </footer>\n    </QuestionCard>\n  );\n}\nfunction Gist({ gist, handleClose }) {\n  if (gist) {\n    const formatedGist = gist.split(\".com/\").pop();\n    return (\n      <Modal\n        title=\"Exemplo de código\"\n        handleClose={() => handleClose(undefined)}\n      >\n        <ContainerGist>\n          <ReactEmbedGist gist={formatedGist} />\n        </ContainerGist>\n      </Modal>\n    );\n  } else return null;\n}\nfunction Home() {\n  const history = useHistory();\n\n  const [showLoading, setShowLoading] = useState();\n\n  const [questions, setQuestions] = useState([]);\n\n  const [reload, setReload] = useState(null);\n\n  const [showNewQuestion, setShowNewQuestion] = useState();\n\n  const [currentGist, setCurrentGist] = useState(undefined);\n  useEffect(() => {\n    setShowLoading(true);\n    const loadQuestions = async () => {\n      const response = await api.get(\"/feed\");\n\n      setQuestions(response.data);\n      setShowLoading(false);\n    };\n\n    loadQuestions();\n  }, [reload]);\n\n  const handleSignOut = () => {\n    signOut();\n\n    history.replace(\"/\");\n  };\n\n  const handleReload = () => {\n    setShowNewQuestion(false);\n    setReload(Math.random());\n  };\n\n  return (\n    <>\n      {showLoading && <Loading />}\n      <Gist gist={currentGist} handleClose={setCurrentGist} />\n      {showNewQuestion && (\n        <Modal\n          title=\"Faça uma pergunta\"\n          handleClose={() => setShowNewQuestion(false)}\n        >\n          <NewQuestion\n            handleReload={handleReload}\n            handleLoading={setShowLoading}\n          />\n        </Modal>\n      )}\n      <Container>\n        <Header>\n          <Logo src={logo} onClick={handleReload} />\n          <IconSignOut onClick={handleSignOut} />\n        </Header>\n        <Content>\n          <ProfileContainer>\n            <Profile\n              handleReload={handleReload}\n              setShowLoading={setShowLoading}\n              // setMessage={setMessage}\n            />\n          </ProfileContainer>\n          <FeedContainer>\n            {questions.map((q) => (\n              <Question\n                question={q}\n                handleLoading={setShowLoading}\n                setCurrentGist={setCurrentGist}\n              />\n            ))}\n          </FeedContainer>\n          <ActionsContainer>\n            <button onClick={() => setShowNewQuestion(true)}>\n              Fazer uma pergunta\n            </button>\n          </ActionsContainer>\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Login\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Register\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\services\\api.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\index.js",["128"],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Tag\\index.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Tag\\style.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Home\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Login\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\pages\\Register\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\GlobalStyles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\styles.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\utils.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Loading\\style.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Alert\\style.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Input\\style.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Modal\\style.js",[],"C:\\Users\\20185444\\Desktop\\3SEM2021\\senai-overflow-web\\src\\components\\Select\\style.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":311,"column":9,"nodeType":"135","endLine":311,"endColumn":59},{"ruleId":"133","severity":1,"message":"134","line":328,"column":9,"nodeType":"135","endLine":328,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":22,"column":6,"nodeType":"138","endLine":22,"endColumn":15,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [handleClose, message]",{"range":"145","text":"146"},[429,438],"[handleClose, message]"]